[{"title":"AuroraCTF2024 新生赛题目复现","url":"/2025/05/22/2025年Aurora-新生赛题目复现/","content":"## 靶场成绩\n![战果](/img/图片1.png)\n\n## 复现\n\n### Web\n\n#### 一剑连接 | 已完成（即自主完成）\n\n![题目](/img/Aurora2024新生赛/图片2.png)\n\n看学长给的web题解里面，用蚁剑相当方便，但是我没有这个工具，于是我是用burpsuite完成该题\n\n\n\n本题点入题目链接可以看到题目的初步要求：\n![题目要求](/img/Aurora2024新生赛/图片3.png)\n\n\n\n\n于是我就选择使用burpsuite来进行传参，首先先对题目的网址进行抓取，并将截取的request放到repeater进行修改\n\n![初次抓包](/img/Aurora2024新生赛/图片4.png#pic_center =70x50)\n\n\n\n按题目要求修改get和post同时传参,混合传参注意格式\n格式将GET换POST，get传参的变量放后面\n``` bash\n$ POST /?god1=izayoishiki \n```\n紧接post的格式\n``` bash\n$ Content-Type:application/x-www-form-urlencoded\n```\n``` bash\n$ god2=cauliweak9\n```\n注意检查post传参赋值后面有没有换行，如有换行，应删除因为换行也被考虑在赋值里面\n\n\n图片如下：\n![题目](/img/Aurora2024新生赛/图片5.png)\n得到location：\n``` bash\n$ Location:bAckd0o0o0or.php \n```\n\n\n\n\n然后我们对该地址进行访问，可以得到我们要post传参ant这一参数：\n``` bash\n$ eval ($_POST['ant']); \n```\n\n\n由题目我们可以知道，flag在/tmp中，我猜测/tmp是一个目录，我得确定里面的文件名方便我读取于是\n``` bash\n$ ant=print_r(scandir(‘/tmp')); \n```\n也就是请求展示这一目录里的文件\n\n得到：\n``` bash\n$ eval($ POST['ant’]);Array\n(\n[0] => .\n[1] => ..\n[2] => f13g_1s h3re\n)\n```\n\n\n\n\n但是这个关于flag的线索不太像文件，于是我继续读取，得到一个仍然不太像文件的数字\n![题目](/img/Aurora2024新生赛/图片6.png)\n\n\n\n\n结合题目意思，我感觉是一个一直嵌套下去的目录，可以直到读取文件，于是我读取再读取，直到文件出来\n![题目](/img/Aurora2024新生赛/图片7.png)\n``` bash\n$ flaggggg.txt \n```\n\n\n\n\n得到文件后，读取该文件内容，就能得到flag\n这时，我们post传参的命令也要有所变化\n``` bash\n$ ant=echo\n$ file_get contents(' '); \n```\n\n\n\nflag如下：\n![题目](/img/Aurora2024新生赛/图片8.png)\n\n\n\n#### Just Signin | 已完成（即自主完成）\n![题目](/img/Aurora2024新生赛/js图片9.png)\n\n这道web的签到题上来我就只想到了伪协议，但是没有回显，卡了好久，甚至看hint还看漏点了，悲，好在还是有惊无险做出来了\n\n点进题目链接可以发现网页源代码已经显示，是简单的文件包含get传参\n``` bash\n$ <?php\n$   highlight_file(_FILE_);\n$   error reporting(0);\n$  //flag is in flag.php\n$   $u = $_GET['_err0r233.yyds'];\n$   include $u; \n$ ?>  \n```\n\n没看到有什么黑名单过滤，于是我就用常规的伪协议完成文件包含，但是没有任何回显\n![题目](/img/Aurora2024新生赛/图片9.png)\n\n看到hint里的字符串特性，才明白，字符串参数里的符号需要进行略微修改\n\n![题目](/img/Aurora2024新生赛/图片10.png)\n\n根据提示改正传参，得到返回的base64编码\n![题目](/img/Aurora2024新生赛/图片11.png)\n\n解码得到flag\n![题目](/img/Aurora2024新生赛/图片12.png)\n\n\n\n\n#### 天才麻将ctfer | 已完成（即自主完成）\n![题目](/img/Aurora2024新生赛/tc1图片13.png)\n\n点进题目链接，看到题目\n![题目](/img/Aurora2024新生赛/图片13.png)\n\n先用burpsuite对该网页进行抓取，然后在该网页html代码里发现两个重要的传参\n``` bash\n$ ?action=getdata\n```\n``` bash\n$ /src.html \n```\n![题目](/img/Aurora2024新生赛/图片14.png)\n\n于是试试对该网页进行传参，传参getdata后得到提示，随机序列，很像伪随机数的题目\n![题目](/img/Aurora2024新生赛/图片15.png)\n\n然后进行第二个传参，然后发现该网页的php代码\n![题目](/img/Aurora2024新生赛/图片16.png)\n\n\n![题目](/img/Aurora2024新生赛/图片17.png)\n\n由其中mt_srand($seed)，可确定是一道种子伪随机数的题目\n\n于是我想到用php_mt_seed进行爆破，那首先的将我们得到的随机序列变成工具读取的形式，编写php脚本\n``` bash\n$ <?php\nerror_reporting(0);\n$str_long1 = \"abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n$string='ZqYRt5oTIl';\n$len1=6;\nfor ( $i = 0; $i < $len1; $i++ ){\n$pos=strpos($str_long1,$string[$i]);\n    echo $pos.\" \".$pos.\" 0 61 \" ;  \n}\n?> \n```\n（string后面是我们得到的随机序列，而我们要得三张手牌，大写字母加数字，总共六长度，于是len1=6）\n\n我选择放到phpstudy上运行\n![题目](/img/Aurora2024新生赛/图片18.png)\n![题目](/img/Aurora2024新生赛/图片19.png)\n\n然后在linux虚拟机上使用php_mt_seed，将这一串数字代入\n![题目](/img/Aurora2024新生赛/图片20.png)\n\n发现了一个种子seed=302663906\n将其带入网页源代码中的php代码便可得到手牌\n``` bash\n$ <?php\n    highlight_file(__FILE__);\n    //index.php\n    \n    $seed = \"<hidden>\";\n    $maj = ['1m', '2m', '3m', '4m', '5m', '6m', '7m', '8m', '9m', '1p', '2p', '3p', '4p', '5p', '6p', '7p', '8p', '9p', '1s', '2s', '3s', '4s', '5s', '6s', '7s', '8s', '9s'];\n    #count($maj) = 27;\n    mt_srand(302663906);\n    $str='';\n    for($i=0;$i<5;$i++){\n        $str .= $maj[mt_rand() % 27];\n    }\n    $res = '';\n    for($i=0;$i<3;$i++){\n        $res .= $maj[mt_rand() % 27];\n    }\n    echo $res;\n    if(isset($_POST['guess'])){\n        if($_POST['guess']===$res){\n            $flag = file_get_contents('/flag');\n            $ret = \"猜对了! 给你flag: $flag\";\n        }\n        else{\n            $ret = \"猜错了!\";\n        }\n    }\n    if(isset($_GET['action'])){\n        if($_GET['action']==='getdata'){\n            $ret = get_random_str($seed);\n        }\n        \n    }\n?>\n```\n\n在mt——srand后面（）中填入得到的种子，而res正是我们的手牌，于是我在中间插入了echo$res，在phpstudy上运行得\n\n![题目](/img/Aurora2024新生赛/图片21.png)\n\n将手牌填入原网页，得flag\n![题目](/img/Aurora2024新生赛/图片22.png)\n\n\n\n#### 天才麻将ctfer-全国大赛篇 | 已完成（即自主完成）\n![题目](/img/Aurora2024新生赛/图片23.png)\n\n这一道题和天才麻将ctfer题目的思路一样，在将随机序列化为格式的脚本中，将len的数值改为5*2=10即可\n\n#### URL_Parser| 已复现（即看Writeup学习后完成的）\n![题目](/img/Aurora2024新生赛/url图片24.png)\n\n做这道题只差临门一脚，最后的判断没有头绪，悲\n点开题目链接后，发现网页源代码\n![题目](/img/Aurora2024新生赛/图片24.png)\n\n根据代码，写了一道完整的url，其中3fde6bb0541387e4ebdadf7c2ff31123 \nMD5解码后得到1q2w3e\n\n传参：\n``` bash\n$ url=getflag://Err0r233:1q2w3e@whoami \n```\n@后面是命令，我选择whoami来做\n\n这里我看出来了不能直接用‘/’，但是运用cd命令时后面重复的是..cd;..cd，导致出错\n\n正确的应该是:\n``` bash\n$ @cd ..;cd ..;cd ..;cd ..;cat f* \n```\n\n完善url，随即得到flag:\n![题目](/img/Aurora2024新生赛/图片25.png)\n\n\n### Pwn\n\n#### nc | 已完成（即自主完成）\n![题目](/img/Aurora2024新生赛/图片pwn.png)\n\nnc某个网址，我选择在linux模拟机上完成nc direct.szu.moe 10077命令，接着用ls和cat命令得到flag\n\n\n### Crypto\n#### SIGIN IN!!! | 已完成（即自主完成）\n![题目](/img/Aurora2024新生赛/图片crypto.png)\n下载文件得到:\n``` bash\n$ Nheben{Jrypbzr_gb_gur_Jbeyq_bs_Pelcgbtencul} \n```\n类似flag形式的字母，但是进行了字母加密，初步分析应该是凯撒密码，所以用位移解密，得到flag：\n``` bash\n$ Aurora{Welcome_to_the_World_of_Cryptography} \n```\n\n\n### Misc\n#### 炸鱼薯条问答-五成熟 | 已完成（即自主完成）\n![题目](/img/Aurora2024新生赛/图片misc26.png)\n\n\n\n点进题目链接，发现问卷\n![题目](/img/Aurora2024新生赛/图片26.png)\n\n\n\n由hint可知答案格式应为正则表达式，而且有例子，更能方便做题，这六道题的答案分别为\n\n![题目](/img/Aurora2024新生赛/图片27.png)\n\n答对百分之五十即可得flag\n\n\n\n\n#### 炸鱼薯条问答-全熟 | 已完成（即自主完成）\n![题目](/img/Aurora2024新生赛/图片28.png)\n\n在五成熟的题目答对百分之百，即可得flag\n","tags":["AuroraCTF"],"categories":["CTF"]},{"title":"《春物》大老师语录（Markdown测试）","url":"/2025/05/20/网页文章测试样板/","content":"## 这是一篇测试文章，看看功能验证\n本篇文章有参考于：\n[手把手教会你使用Markdown【从入门到精通一篇就够了】](https://blog.csdn.net/qq_40818172/article/details/126260661)\n\n### 大老师经典语录\n\n#### 复制功能测试\n``` \n$ 温柔正确的人总是难以生存，因为这世界既不温柔，也不正确\n```\n``` \n$ 努力是不会背叛自己的，虽然梦想会背叛。 努力不一定能实现梦想，但是曾经努力过的事实却足以安慰自己。\n```\n\n#### 文章文字测试\n要让一群人团结起来，需要的不是英明的领导，而是共同的敌人 --大老师\n\n没有期待就没有失望，没有羁绊就不会受伤。 --大老师 \n\n我讨厌温柔的女孩子。温柔的女孩子其实对所有人都温柔，我却会误以为只对我温柔， 然后就沾沾自喜得意忘形，最后闹得不欢而散，双方都受到伤害。--所以我才讨厌温柔的女孩子。 --大老师 \n\n孤独的人不会伤害别人，只会不断地伤害自己罢了。 --大老师\n\n这世上真正的好人和坏人都很少，大部分都是普通人。平时随波逐流，关键时刻则会出于自我保护 而露出獠牙--然而正是因为这样才可怕。 --大老师\n\n大家互相帮助，一起成功，一起幸福什么的，不过是种理想。 现实中，有人幸福，就必定有人被抛弃 有人光鲜，就必须有人满身泥泞。 --大老师\n\n只有弱者才喜欢扎堆，问题是绝大部分人都是弱者。 --大老师 \n\n只要稍微打个招呼就会胡思乱想，要是互相发短信，心中还会起波澜，接到对方来电的那一整天，都会对着来电记录傻笑，可是我知道，那只是温柔，对我温柔的人对别人也同样温柔，这种事差点就忘记了,如果说真相是残酷的，谎言肯定是温柔的，所以温柔是谎言，一次又一次期待，一次又一次落空，不知从何时开始，便不再怀抱希望。 --大老师\n\n#### 图片测试\n\n![大老师比企谷](/img/比企谷.png)\n\n\n#### 链接测试\n\n##### 视频\n[比企谷八幡（大老师）经典语录。【加长完全版】](https://www.bilibili.com/video/BV1eN411Q7Fi/?spm_id_from=333.337.search-card.all.click&vd_source=c5d6a3592e7e850ab2edf3e4f550196e)","tags":["网页测试"],"categories":["测试"]},{"title":"Hello World","url":"/2025/05/19/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","tags":["hexo框架功能"],"categories":["测试"]}]